<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.sist.elysian.admin.res">
	<select id="roomResList" resultType="rrd">
		select row_number() over(order by rr.pay_num) num,
			 rr.pay_num payNum, rr.room_res_status roomResStatus,
			 r.room_rank_name || ' | ' || r.bed_cnt || ' ' || r.bed_name || ' | ' || r.view_name room,
			 rr.checkin checkIn, rr.checkout checkOut, rr.room_res_date roomResDate,
			 m.eng_fname || ' ' || m.eng_lname engName, rr.guest_phone guestPhone
		from room_reservation rr, room r, member m
		where rr.room_id = r.room_id
		and rr.user_id = m.member_id
		order by payNum
	</select>
	
	<select id="roomResDetail" resultType="rrd" parameterType="String">
        <![CDATA[
		select rr.pay_num payNum, r.room_id roomId, r.room_rank_name || ' | ' || r.bed_cnt || ' ' || r.bed_name || ' | ' || r.view_name room,
			 rr.room_res_status roomResStatus, rr.adults_num adultsNum, rr.kids_num kidsNum,
			 rr.checkin checkIn, rr.checkout checkOut,
			 m.eng_fname || ' ' || m.eng_lname engName, rr.guest_phone guestPhone, rr.guest_email guestEmail, rr.guest_request guestRequest,
			 c.code_name cardName, p.card_num cardNum, p.pay_price payPrice, p.pay_time payTime
		from room_reservation rr
		inner join room r
		on r.room_id = rr.room_id
		inner join member m
		on m.member_id = rr.user_id
		inner join pay p
		on p.pay_num = rr.pay_num
		inner join common_code c
		on substr(card_code, 0, instr(card_code, '_')-1) = c.code_type and substr(p.card_code, instr(p.card_code, '_')+1) = c.code_val
		where rr.pay_num = #{payNum}
		]]>
	</select>
	
	<select id="roomInfoList" resultType="rid" parameterType="Map">
		<![CDATA[
		select room_id roomId, room_id || 'í˜¸(' || room_rank_name || ' | ' || bed_cnt || ' ' || bed_name || ' | ' || view_name || ')' roomInfo
		from room
		where room_id not in (
							select room_id
							from room_reservation
							where to_char(checkin, 'yyyy.mm.dd') = #{checkIn}
							AND to_char(checkout, 'yyyy.mm.dd') = #{checkOut}
							AND room_res_status = 'RESERVED'
							)
		and delete_status = 'N'
		]]>
	</select>
	
	<update id="checkin" parameterType="Map">
		update room_reservation
		set room_res_status = 'CHECK IN', checkout = sysdate, admin_id = #{adminId}
		where pay_num = #{payNum}
	</update>
	
	<update id="checkout" parameterType="Map">
		update room_reservation
		set room_res_status = 'CHECK OUT', checkout = sysdate, admin_id = #{adminId}
		where pay_num = #{payNum}
	</update>
	
	<update id="cancelRes" parameterType="Map">
		update room_reservation
		set room_res_status = 'CANCELED', admin_id = #{adminId}
		where pay_num = #{payNum}
	</update>
	
	<update id="updateRoomRes" parameterType="Map">
		update room_reservation
		set room_id = #{roomResVO.roomId},
			admin_id = #{adminId},
			guest_phone = #{roomResVO.guestPhone},
			guest_email = #{roomResVO.guestEmail},
			guest_Request = #{roomResVO.guestRequest}
		where pay_num = #{roomResVO.payNum}
	</update>
	
	<select id="diningResList" resultType="drd">
		select row_number() over(order by dr.pay_num) num,
			 dr.pay_num payNum, dr.dining_res_status diningResStatus,
			 d.dining_name diningName,
			 dr.visit_datetime visitDateTime, dr.visit_people visitPeople, dr.visitor_name visitorName, dr.visitor_phone visitorPhone, dr.dining_res_date diningResDate
		from dining_reservation dr, dining d, member m
		where dr.dining_id = d.dining_id
		and dr.user_id = m.member_id
		order by payNum
	</select>
</mapper>