name: 도커 이미지 생성 및 배포

on:
  pull_request:
    branches:
      - main
    types: [closed]

jobs:
  build_and_upload_image:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: '3.8.2'
      
      - name: Verify Maven installation
        run: mvn -version
      
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'  # Example distribution, adjust as needed
      
      - name: Build Docker image
        run: docker build -t elysian .
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Push Docker image to Docker Hub
        run: |
          docker tag elysian ${{ secrets.DOCKER_USERNAME }}/elysian:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/elysian:latest

  run_docker_image:
    needs: build_and_upload_image
    runs-on: self-hosted  # self-hosted 러너에서 실행

    steps:
      - name: Pull Docker image from Docker Hub
        run: |
          IMAGE_NAME="${{ secrets.DOCKER_USERNAME }}/elysian:latest"
          if docker inspect "$IMAGE_NAME" > /dev/null 2>&1; then
            echo "Image exists. Removing..."
            docker rmi -f "$IMAGE_NAME"
          fi
          echo "Pulling image..."
          docker pull "$IMAGE_NAME"

      - name: Check if Docker container exists and is running
        id: check_docker_container
        run: |
          container_id=$(docker ps -aqf "name=elysian-container")
          if [ -z "$container_id" ]; then
            echo "container_exists=false" >> $GITHUB_ENV
          else
            echo "container_exists=true" >> $GITHUB_ENV
            container_running=$(docker inspect -f '{{.State.Running}}' "$container_id")
            if [ "$container_running" == "true" ]; then
              echo "container_running=true" >> $GITHUB_ENV
            else
              echo "container_running=false" >> $GITHUB_ENV
            fi
          fi

      - name: Stop and remove Docker container if running
        if: env.container_running == 'true'
        run: |
          docker stop elysian-container
          docker rm elysian-container

      - name: Remove Docker container if exists (not running)
        if: env.container_exists == 'true' && env.container_running == 'false'
        run: docker rm elysian-container

      - name: Check and remove containers using port 80
        run: |
          containersUsingPort=$(docker ps -aq --filter "publish=80")
          if [ -n "$containersUsingPort" ]; then
            docker stop $containersUsingPort
            docker rm $containersUsingPort
          fi

      - name: Run Docker container
        run: docker run -d -p 80:8080 --name elysian-container ${{ secrets.DOCKER_USERNAME }}/elysian:latest